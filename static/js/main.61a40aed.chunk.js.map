{"version":3,"sources":["components/TodoList/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoList","storageTodos","JSON","parse","localStorage","getItem","useState","input","setInput","todos","setTodos","inputRef","useRef","className","ref","value","type","placeholder","onChange","e","target","onClick","current","focus","prev","newTodos","jsonJobs","stringify","setItem","map","item","index","filter","todo","i","handleRemove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA8DeA,EA3DE,WACf,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,UAErD,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAQ,OAACL,QAAD,IAACA,IAAgB,IAAnD,mBAAOQ,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAyBxB,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBACEC,IAAKH,EACLI,MAAOR,EACPS,KAAK,OACLC,YAAY,mBACZC,SAAU,SAACC,GAAD,OAAOX,EAASW,EAAEC,OAAOL,UAErC,wBAAQM,QAlCE,WACF,KAAVd,EACFI,EAASW,QAAQC,SAEjBb,GAAS,SAACc,GACR,IAAMC,EAAQ,sBAAOD,GAAP,CAAajB,IACrBmB,EAAWxB,KAAKyB,UAAUF,GAEhC,OADArB,aAAawB,QAAQ,QAASF,GACvBD,KAETd,EAASW,QAAQC,QACjBf,EAAS,MAuBL,oBAEF,qBAAKK,UAAU,gBAAf,SACE,6BACGJ,EAAMoB,KAAI,SAACC,EAAMC,GAAP,OACT,+BACGD,EACD,sBAAMT,QAAS,kBA1BR,SAACU,GACpBrB,GAAS,WACP,IAAMe,EAAWhB,EAAMuB,QAAO,SAACC,EAAKC,GAAN,OAAYA,IAAMH,KAC1CL,EAAWxB,KAAKyB,UAAUF,GAEhC,OADArB,aAAawB,QAAQ,QAASF,GACvBD,KAqBwBU,CAAaJ,IAAlC,oBAFOA,gBC1CRK,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.61a40aed.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport \"./TodoList.scss\";\r\n\r\nconst TodoList = () => {\r\n  const storageTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const [todos, setTodos] = useState(storageTodos ?? []);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const handleAdd = () => {\r\n    if (input === \"\") {\r\n      inputRef.current.focus();\r\n    } else {\r\n      setTodos((prev) => {\r\n        const newTodos = [...prev, input];\r\n        const jsonJobs = JSON.stringify(newTodos);\r\n        localStorage.setItem(\"todos\", jsonJobs);\r\n        return newTodos;\r\n      });\r\n      inputRef.current.focus();\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  const handleRemove = (index) => {\r\n    setTodos(() => {\r\n      const newTodos = todos.filter((todo,i) => i !== index)\r\n      const jsonJobs = JSON.stringify(newTodos);\r\n      localStorage.setItem(\"todos\", jsonJobs);\r\n      return newTodos;\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"content\">\r\n        <div className=\"content__form\">\r\n          <input\r\n            ref={inputRef}\r\n            value={input}\r\n            type=\"text\"\r\n            placeholder=\"Enter your todos\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <button onClick={handleAdd}>Add</button>\r\n        </div>\r\n        <div className=\"content__list\">\r\n          <ul>\r\n            {todos.map((item, index) => (\r\n              <li key={index}>\r\n                {item}\r\n                <span onClick={() => handleRemove(index)}>&times;</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import TodoList from \"./components/TodoList/TodoList\";\n\nfunction App() {\n  return (\n    <TodoList />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}